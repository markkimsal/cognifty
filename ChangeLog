Cognifty ChangeLog

Changelog: Cognifty 19: Module Installer
================================================================================
Release Notes:

This release consists of a lot of bug fixes, template and user interface
changes, as well as the new module installer.


New Features:

  * Service Library: make default authorization failure behavior overridable by services.
  * Content: introduced more content plugin features into main content publishing workflow.
  * Data Item: added whenUsing() to Cgn_DbWrapper specify specific connection handles for individual data item tables.
  * Content Library: Added a method to get all defined sections of a published web page.
  * Blog: Added breadcrumbs to admin blog view post screen.
  * Content: change the embed other items tool to be a floating panel so it doesn't conflict with the tabbed interface and lose the cursore position.
  * Added module installer based on phing.
  * Module Manager: Added ability to upload a zip file for installation.
  * Module Manager: Allow for editing of complete local.ini file for modules.
  * Module Manager: added ability to specify PDO tasks for which the
default database information is automatically set.
  * Login Module: Added logout signal to logoutEvent, logout_success_after
  * Session Library: fixed GC method to clean up session from the DB 10% of the time even if the PHP.ini specifies no GC probability because the OS is expecting cron based cleanup.
  * Zend Search: Upgraded Zend Search Lucene library to 1.8.4PL1
  * Installer: Added two new e-mail settings, default from and error notify.
  * Module Installer: Added step by step output of phing tasks to the installation process.
  * Admin Database: Created a simple module to run SQL scripts against any
configured DSN.
  * Module Installer: allow for an option to skip failed steps.
  * Template library: Added two methods to specify extra Javascript to any template.
  * User Admin: added 'login-as' feature so admins can login as regular users.
  * Session Library: track any HTTP REFERER present right when the user
starts a session.

User Library: allow for the same username from different idProviders
  * Util Library: added some simple methods for armoring of integers to alphanumeric representation.
  * Main Module: Pages now emit signals for each page section as well as moving the section content into the template section.


Bug Fixes:

  * Core: Changed the module path finding for overridden admin modules to be the same as front-end modules
  * Blog: Fixed an issue where the custom content type key was different in
the library from the default config key.
  * Main module: Fixed form to email script to use cleanMultiLine on the submitted text area.
  * Admin service: fixed a small bug when dealing with page titles.
  * Login: fixed syntax error when emitting login event.
  * HTTP lib should use configured port, not force SSL
  * Module Manager: fixed issue when local module directories are not
present.
  * Selenium: fixed blog publishing to include blog id of 1.
  * Session Library: fixed GC method to clean up session from the DB 10% of the time even if the PHP.ini specifies no GC probability because the OS is expecting cron based cleanup.
  * Content editor: fix lightbox rel attribute for HTML type documents and blog posts.
  * Content: don't bump the version number if we're just setting the content type.


Minor Changes:

  * Service Library: Removed build toolbar method from delete event, UI not shown.
  * Setup: change transformlite script to work with new SQL file locations.
  * Selenium tests: updated to work with new installtion form.
  * User: updated login method to use data item objects.
  * Libraries: small speed-ups done to some core libraries.
  * Benchmark module: made benchmark not throw hidden errors, faster execution now.
  * Data Item: small speedup to buildInsert.
  * Content module: Moved wiki/content layout class into front-end content module from app-lib.
  * Blog: added correct javascript for linking other content items to happen in the blog.
  * App-lib: removed from the system.
  * Object Store: swap sys.path setting from file names in getRealFilename function.
  * Request Handler: fix cleanHtml function definition to avoid strict errors.
  * Webutil Module: allow identicons to be cached by the browser by sending special headers.
  * Account Module: allow user images to be cached by the browser by sending special headers.
  * HTTP Library: Return doGet and doPost values from fetch()
  * Added basic cell CSS classes to MVC tables without row counts.
  * Module Manager: Added display name to meta information to modules.
  * Content: don't bump the version number if we're just setting the content type.
  * Session Library: track any HTTP REFERER present right when the user
starts a session.

User Library: allow for the same username from different idProviders
  * Selenium tests: Updated links to match new mega menus in the admin.


Database Changes:

  * Session Library: track any HTTP REFERER present right when the user
starts a session.

User Library: allow for the same username from different idProviders


Config Changes:

  * App-lib: removed from the system.
  * Session Library: fixed GC method to clean up session from the DB 10% of the time even if the PHP.ini specifies no GC probability because the OS is expecting cron based cleanup.
  * Boot core: added some explanation of the different session libraries.
  * Cleaned up default ini files and added comments.
  * Installer: Added two new e-mail settings, default from and error notify.
  * Module Installer: refresh config cache if enabled after updating module configuration.


Interface Change:

  * Module Manager: made some changes to allow for viewing of config.ini
settings.
  * Blog: Adjust view of spam rating on blog entry pages.
  * Module Installer: Added step by step output of phing tasks to the installation process.
  * Module Installer: allow for an option to skip failed steps.
  * Blog: added idprovider badge spot next to the comments.
  * Added basic cell CSS classes to MVC tables without row counts.
  * Admin Template: Pushed footer to bottom of admin template.
  * Admin: updated login template.
  * Module Manager: added settings column to module display table.
  * Module Manager: added 'goto' link for each module.
  * Admin: changed menu system from superfish to mega menus with hover intent.
  * Content Admin: show the title of the content when viewing instead of just the mime type.



Changelog: Cognifty 18: Custom Content Plugin
================================================================================
Release Notes:

The big item in release 18 of Cognifty is the ability to create your own
content types with the content plugin architecture.  Other minor new
features include:

  * Ability to specify a user icon in your profile
  * Blog tag browsing
  * Removal of app-lib directory
  * User account organization management.

New Features:

  * Admin Content: Moved blog publishing routines out of main admin files into blog module.  Publishing system now uses a signal / slot mechanism for publishing non-core content types.
  * Service lib: Implement default _makeTableRow method for Crud and AdminCrud classes.
  * User admin: added ability to view organizational accounts.
  * Account: add service to show a user account icon.
  * Object Store: getArray() now returns a complete n-dimensional array of config values.
  * Content: allow config keys of content.extrasubtype to define new content publishing types.
  * Core: added hasParam() to check of a key was submitted via GET or POST.
  * Setup: added tar_transfer script to help moving svn checkout code directly into a live site.
  * Content: change custom content sub-type publishing system from event based to plugin based.
  * Content: Moved blog system from old event style publishing to new plugin style content publishing.
  * Module Util Library: Fixed path searching to use more advanced override features found in the core module loader.
  * Added ability to change organization membership to user edit.
  * Added organization delete link.
  * MVC Table: Added url renderer to base library.
  * Template library: Added setSiteCss and getSiteCss to add special css files on a per-module basis.
  * Content: added tag support to blog posts and core content objects.
  * Blog: show tags in template section 'nav.blogtags' by default.
  * Blog: create tag browsing event.
  * Added account images to the account page.
  * Template Lib: fix cgn_adminurl to work 100% with setups that don't have SSL.


Bug Fixes:

  * Admin content: fix for errors when editing unknown content types.
  * Mail message: fix bug when sending to multiple recipients.
  * Object store: add template handler to wakeup so that services can redirect when config cachign is on.
  * Template: fixed bug where not all link functions were respecting ssl desires.
  * Core:  Fixed Cgn_ObjectStore::getArray() to work with arrays that have 0 as an array key.
  * Crud Service: fixed a bug where create forms were treated the same as edit forms.
  * Template Lib: fix cgn_adminurl to work 100% with setups that don't have SSL.
  * Core Request Library: Changing urldecode to rawurldecode for info from the PATH_INFO to allow for plus signs in e-mail.
  * Idention lib: Fixed error handling when building in an evnironment which doesn't have GD


Minor Changes:

  * Admin Login: Fixed redirect issue so you will never be redirected back to the login module.
  * Install: working on perfecting SQL syntax to be more standards compliant.
  * Content: adding content module to hold content libraries.
  * Content: migrated lib_cgn_content away from app-lib into the front-end content module.
  * Admin controller: removed unncessary backwards compatibility setting for admin module path.
  * Content: moved loading of specific sub-types of content to a library factory method.
  * Admin Content: Moved blog publishing routines out of main admin files into blog module.  Publishing system now uses a signal / slot mechanism for publishing non-core content types.
  * Blog: change responsibility for displaying blog entry content to the blog module, away from the core content module.
  * Service lib: Implement default _makeTableRow method for Crud and AdminCrud classes.
  * Bootstrap: minro speed improvement to bootstrap when cached.
  * Login: completely erase a session when the user clicks to logout.
  * YUI: updated background color of tree item labels
  * Boot: Return object loading scheme to bootstrap file.
  * Core: don't save an object in the object store if it doesn't have a special name, simply return it.
  * CRUD service: Use better method of determining the data object for the save event.
  * Tests: fixed library loading of content libraries from new module-centric location.
  * Upgrades: added cgn_user_org link table to 0017_0018 upgrade directory.
  * Admin Modules: Change 'access module' button to work with both front-end and admin modules.
  * Search Library:  add isClosed parameter to check of the search index is not available for reading or writing.
  * Template: added cgn_sappurl function to easily force HTTPS mode in your links.
  * Upgrades: added link_text column to content tags table.
  * Blog: added tags to publishing pipeline.
  * Installer: add blog tag tables.
  * Upgrades: added blog tags tables to the 0017_0018 upgrades folder.
  * Template Library: changed section callbacks to be stored internally by the section ID, small readability changes.
  * Install mod: Made some instruction clearer.
  * Install mod: Added a page to customize some site template variables to the installer.
  * Core Request Library: Changing urldecode to rawurldecode for info from the PATH_INFO to allow for plus signs in e-mail.


Config Changes:

  * Content: allow config keys of content.extrasubtype to define new content publishing types.
  * Blog: show tags in template section 'nav.blogtags' by default.


Interface Change:

  * Admin content upload: fixed javascript issues with FF3.
  * Template: moved the position of the 'view site' link in the admin template.
  * Media: Added message icons
  * User admin: added ability to view organizational accounts.
  * Blog: redirect to the blog view page after publishing.
  * YUI: updated background color of tree item labels
  * Added ability to change organization membership to user edit.
  * User Admin: added the number of members in an organization to the organization list page.
  * Admin Modules: Change 'access module' button to work with both front-end and admin modules.
  * Icons: added a basic Ajax loader wait icon.
  * Blog: show tags in template section 'nav.blogtags' by default.
  * Blog: create tag browsing event.
  * Install mod: Made some instruction clearer.
  * Install mod: Added a page to customize some site template variables to the installer.



Changelog: Cognifty 17: Identicons and DB Backups
================================================================================
Release Notes:

Release 17 consists mainly of bug fixes.  Two new features include an
"identicon" library for generating unique graphics and a simple database
backup tool.

Over 200 individual changes are present in release 17, meaning that a lot
of bugs were fixed and a lot of code was cleaned up.

One big change was the addition of the "Cgn_Request::cleanMultiLine()"
method.  cleanString() will no longer allow new lines in the input. 
cleanMultiLine() does allow new line characters, but strips all ASCII
control characters, like backspace and vertical tab.

Upgrade complexity level: High

Database changes required: yes  
Changes to config file definitions: no
Breaking changes to custom code: yes

All code which cleans input needs to differentiate between code which
should accept new line characters and those which should not.  If you are
cleaning input which comes from a text area you need to switch to
cleanMultiLine().


New Features:

  * Add 'getPrimaryKey' to Data Model to pass through to Data Item library.
  * Changed data model's load to return whether or not the pkey == the supplied ID after loading.
  * Added paginated admin table view to library and content image viewer.
  * Added paginated next/prev links to the embedded content linker window.
  * Added checkbox column renderer to MVC table view.
  * Added ability to add completely cusotm javascript to admin toolbar buttons.
  * Added mass erasing of objects from the trash can.
  * Added option to hide submit button on forms with setShowSubmit().
Added setJsOnChange() to all form elements.
  * Added loadVisibleListAsArray method to data model list objects.
  * Updated admin ticket runner to handle ajax requests like the front-end runner.
  * Changed installation steps to read RAW sql files as well as ask for 2 DNS entries.
  * Added the ability to set a "Page" as the "Default Home Page" via the CGN Admin System. A new toolbar option "Set a Homepage" is available in "Pages". The idea was to create a simple visualization tool to manage the home page content. ONLY ONE PAGEshould be set as the default Home Page content. If more than one page is set, the last page found will be displayed.
  * Added security checks throughout entire install module.
  * Added "loadExisting" method to data items to attempt to load 1 row with all the set values of the object.
  * Added "setModel" method to data model list objects so they can wrap
the data items in data models if they choose.
  * Always force a new link in the mysqldriver, shared links are
already handled with the DSN concept higher up.
  * Changed Menu Item Maintenance - module & external url menu items
Added the ability to set a Parent Link to these types of menu items.
This feature was missing for only these 2 items. Modified the type-local and the loadLocalForm function at the bottom of the file.
  * Added directory specifically for custom administration modules.
  * Altered admin service runner to check for overridden local admin modules.
  * Fixed login for admin system and added a slip-stream login service for admin just like front-end modules. (SILENT)
  * Added cleanMultiLine method to clean input and allow new-lines, tabs, and line feeds.
  * Added simple "isNew" method to the session object to test whether this is the first request
from a given session or not.
  * Completed basic functionality for front end and backend service cruds.
  * Added start of Identicon visualization library.
  * Added the cleanFloat method.

This will always return only the float value.
Enhancement to allow functionality for decimals in a manner similar to integers
  * Adding identicon front-end service into mod 'webutil'
  * Added GUID based identicons to content browser for pages, articles, and files.
  * Added an 'access module' button for admin modules to the tool bar when viewing module details.
  * added the ability to supply an action to the cgn_form cancel button.

Defaults to the old javascript history back if not set.

Can set the new variable with something like:

$f->actionCancel = 'window.location=\'
'.cgn_appurl($this->moduleName, 'main', 'main').'\'';

similar concept to showCancel and labelCancel
  * Added 3 signals to user registration module.
  * Added simple database backup system.
  * Use zip extension to compress database backups if it's built-in and safe_mode is on (i.e. no exec).
  * Shut off comments for posts older than 1 month.
  * Added tutorial page for migrating template themes to cognifty.


Bug Fixes:

  * Fixed fatal error when viewing module details in the admin.
  * create cgn_sess if not exists
  * Fixing upgrade scripts from a very old site.
  * Fixed bug which showed too much content as unpublished.
  * Fixed bug with moving menu items up and down which have zero or null as the parent_id
  * Fixed a bug in the article page saving routine which produced a minor error every other time an article was published.
  * Applied temporary fix an unpublishing problem where the content's sub_type was being
directly used as a module/service name.
  * Fixed bug in PDO Sqlite driver which didn't execute some statements.
  * Fix for SQLite and primary keys during buildInsert.
  * Fix broken CGI request uri handling, at least for nanoweb.
  * Fixed bug when setting preview styles for blog posts.
  * Added security checks throughout entire install module.
  * Changed Menu Item Maintenance - module & external url menu items
Added the ability to set a Parent Link to these types of menu items.
This feature was missing for only these 2 items. Modified the type-local and the loadLocalForm function at the bottom of the file.
  * Fixed incorrect lookup of site structures in the default file not found module.
  * Fixed treatment of last touch time in session if this is the first session touch.
  * Fixed treatment of 'file not found' conditions in the admin to match those of the
front end modules.
  * Fix to admin module using the wrong templates for previewing.
  * Fixing group edits when the system only has 1 group (checkbox UI).
  * Allow data models to load more columns than just the primary table's columns.
  * Fixed free result in queryOne* methods of the mysql driver.
  * Added fix for site structure table.
  * Fixed search result ID handling for non-web page results.
  * Fixed a major bug in handling urldecoding of PHP super globals.
  * Protect updating of binary blob fields in mysql driver.
  * fix load succeeded checking in data models to work with missing input.
  * List of Pending Content now shows content which was never given a sub-type.
  * Check for content which was never published once before deleting it.
  * Account library: Force birth_date as integer type before saving.
  * User library: Fixed alias of group table in load groups query.
  * Fixed a bug in sub-where clause creation.
  * Added error when uploading files which have errors. (SILENT)


Minor Changes:

  * Make data item's __tostring a bit easier to read.
  * pass MVC data model to column renderers as an optional 4th parameter
  * Add size to default input form widgets if it is non-zero
  * Changed data model's load to return whether or not the pkey == the supplied ID after loading.
  * Fixed load to return FALSE when no records are found (0 id)
  * Changed display of content meta-data.
  * Fixed version compare method when determining if an upgrade is available for a module.
  * Added option to hide submit button on forms with setShowSubmit().
Added setJsOnChange() to all form elements.
  * Fixed bug in PDO Sqlite driver which didn't execute some statements.
  * Moved setup sql files into installation module.
  * Minor changes to cgn::debug to call __toDebug if the method exists.
  * Added "setModel" method to data model list objects so they can wrap
the data items in data models if they choose.
  * Always force a new link in the mysqldriver, shared links are
already handled with the DSN concept higher up.
  * Created a default.ini entry to control allowing a user to register with the site.
Changed login template file to call the setting and look at the value.
new setting: allow.selfregister
allowed values: true, false
  * Clean up differences between front-end module overriding and back-end module overriding.
  * Minor fix to module manager's ability to filter out files from directories.
  * Fixed treatment of 'file not found' conditions in the admin to match those of the
front end modules.
  * Fixed login for admin system and added a slip-stream login service for admin just like front-end modules. (SILENT)
  * Changed the default redirect to redirect to the same page, instead of the referrer header.
  * Module manager library now checks default installed locations as well as the "local" override locations for modules.
  * Added list and create methods to AdminCrud default service.
  * Added simple view event to AdminCrud
  * Allow data models to load more columns than just the primary table's columns.
  * Started fleshing out front-end CRUD service.
  * Added shadow offsets to identicons and more shapes from Scott Sherrill's designs
  * Added current table page to front-end Crud service.
  * Passthrough valuesAsArray() from data model to data item.
  * Added __toString passthru function to data models.
  * Added a way to set an array of values to be checked for form checkboxes - mgkimsal
  * Default paged tables to page 1 instead of page 0.
  * Clean up source code for sandbox module (showoff).
  * Added a default implementation of makeTableModel to admin crud service.
  * Making toolbar more dynamic for front-end CRUD services by allowing for a customizable 'Home'
button name and for calling 'Item' different nouns.
  * Add a few ways to specify the name of mvc table checkbox col renderers.
  * Changed cleanInt and cleanFloat to work with multi-dimensional arrays
  * List of Pending Content now shows content which was never given a sub-type.
  * Check for content which was never published once before deleting it.
  * Removed dependency on deprecated mysql_list_field style functions.
  * Shut off comments for posts older than 1 month.
  * Account library: Force birth_date as integer type before saving.
  * Added tutorial page for migrating template themes to cognifty.
  * Dokuwiki library: Turn on external image link creation.
  * Added simple clearSessionVar method to the core request.
  * Return FALSE from service emit() if no signal manager is present.
  * Show an error if no template files can be included.
  * Changed default login behavior to use PHP_SELF as a redirect location if no referrer is found.


Database Changes:

  * Adding link_text column to cgn_site_struct table.


Config Changes:

  * Small patch to bootstrap to work with minimal local ini files.
  * Created a default.ini entry to control allowing a user to register with the site.
Changed login template file to call the setting and look at the value.
new setting: allow.selfregister
allowed values: true, false
  * Clean up differences between front-end module overriding and back-end module overriding.


Interface Change:

  * Fixed rowspan issue with data tables which have no records.
  * Added pipe separator to tool bar in between the buttons.
  * Added time to date field in the site garbage can.
  * Changed placement of toolbar directions on menu item page to appear
closer to the toolbar itself.
  * Added simple 'data_form' class to Cgn_Form output form tags.
  * scott changes to re-arrange login templates a bit
  * Fixed typo in Section Heading - the word " Maintenance "
  * Placed the toolbar code earlier in the Main function. The toolbar was rendering under the content in Menu Item Maintenance - Main on some websites. Placement of the code early fixed the issue.
  * Replaced missing toolbar in content.view.main.

Toolbar was missing from view after you selected an item to preview.....
  * Fixing group edits when the system only has 1 group (checkbox UI).
  * Worked on better CSS support and formatting for the class Cgn_Form_layout in lib_cgn_form.php

Lots of CSS opportunities now. Reasonable form layout without any new CSS settings.

some new variables for forms....

------------------------------------

var $showSubmit = TRUE; (show the submit button )
var $labelSubmit = 'Submit';  (the button label )
( you may want to relabel Save, Commit, Next, etc... )

var $showCancel = TRUE; ( show a cancel button )
var $labelCancel = 'Cancel'; ( the button lablel )
( you may want to relabel Return, etc... )
  * Fixed some bad HTML and extraneous HTML which showed up poorly when not using footers, cancel buttons, etc. in a table that has colored borders around rows and cells.
  * Added GUID based identicons to content browser for pages, articles, and files.
  * Links under H1 tags had a duplicate background in the CSS for refresh01.
  * Adding "no" sheild icons.
  * Use a block clearing span instead of a BR to avoid extra spacing issues
when using auto-templates without module template files.
  * Changed default form submit button value to "Save" from "Submit".
Deleted FancyDelete layout, since submit button labels can be changed.
  * Fixed content type to UTF-8 in refresh01 template.


Release 16
================================================================================
Release Notes:

This release brings a lot of bug fixes and minor changes to the way some
library functions work.

New features include: data items that can function without a primary key
field, more defined methods in the MVC table library, an API module and
api-agent settings for every user account.

Upgrade complexity level: High 
 
Database changes required: yes  
Changes to config file definitions: yes  
Breaking changes to custom code: yes


New Features:

	* Added group handling functions.
	* Added a form to edit groups for one user.
	* Started adding Sharing Model techniques to data model class.
	* Added support for sub where clauses in the data item.
	* Changed default template behavior to pass along the service's templateName if it has been set.
	* Added method to get all group IDs of a user as an array.
	* Adding autoload function to help with lazy loading of ObjectStore items.
	* Changed userform submits to look for random fieldnames to protect against spam bots.
	* Adding local-modules folder by default that ignores all custom chagnes in it.
	* Added $totalCount to MVC Table Model's to hold information about more rows that might not be displayed to the user at time of rendering.
	* Add ability to do pkey-less saving and updating to the data item's save method.
	* Added printBefore to MVC table view to allow for any HTML before the table tag.
	* Modified load statement to work with primary-key-less data items
	* Added generic get/set methods to core data item to match access with data models.
	* Added delete functionality to data models that also removes the item from the lucene search.
	* Added a setValue method so that checkboxes, radio buttons, and select boxes can have their default selected option changed after adding all the options.
	* Capture any "echo" commands during an API event into an output buffer and json encode.
	* Adding basic API module to handle agent requests.
	* Added extra method to return a set of arrays instead of a set of data items when using the data item as a finder.
	* Added some easy access functions to the system request for getting/setting session vars.
	* Changed loadLibrary and loadAppLibrary to conditionally accept the package separator '::'
	* Added a simple mail class
	* Added a way to turn off SSL links for developing or servers w/o SSL.
	* Added support for non-standard SSL port numbers.
	* Added support for changing the default session save path to the simple session handler.
	* Added stackTicket static method to core Cgn_SystemRunner to append new tickets during a request.
	* Changed preEvent and postEvent to eventBefore and eventAfter to avoid collisions with real event names.
	* Added agent API related account pages.


Minor Changes:

	* Small SQL syntax changes to make install files more compatible with sqllite.
	* Added group handling functions.
	* Added simple echo Update debuggin function.  Return true or false from save() even when updating.
	* Changed default template behavior to pass along the service's templateName if it has been set.
	* Added method to get all group IDs of a user as an array.
	* If time stamp is 0, don't render a date in the MVC Date Column Renderer.
	* Use include over include_once for speed.
	* Fixed bug in xhr parameter checking for ajax-y requests.
	* Fixed throwError so that it doesn't count every error type as critical failures.
	* Changed userform submits to look for random fieldnames to protect against spam bots.
	* Fix to data item delete method to work with finder results instead of just single items.
	* Adding two MVC examples to cheatsheet.
	* Moved isAjax variable from object store to currentRequest.
	* Replace dashes in module class names with nothing, dashes are illegal in classnames
	* Minor changes to main module's layout of articles.
	* Added some database integration tests for articles.
	* Added simple benchmark module.
	* Added some triangular arrows in four directions to the default icons.
	* Added $totalCount to MVC Table Model's to hold information about more rows that might not be displayed to the user at time of rendering.
	* Fixed Cgn_DataItem::getUnlimitedCount to work with strange group by clauses.
	* Use choice values as set value for radio buttons, not the index.
	* Added some newlines to update and insert statements to make them easier to read.
	* Moved table header row creation into a separate method for easy customizability.
	* Changed logout behavior to completely erase a session if the user is not logged in before clicking logout.
	* Changed parameters for addChoice of Radio elements to match Select elements.
	* Changed some MVC table behaviors to work with integer arrays or associative arrays.
	* Added error handling to search results page.
	* Added table demo page to showoff (sandbox) module.
	* Added THEAD section to data table renderers.
	* Changed account register link to HTTPS by default.
	* Added agent API related methods to core user object.
	* Added login/logout links to refresh template.
	* Added the user as  to all module template files and site template file parsing.
	* Added 'view site' link to login page for admins.
	* Added support for making link_text with old preg libraries.


Bug Fixes:

	* Fixed some final where clause handling in the data item and data model classes.
	* Fixed problem where article pages can't be saved before an article is published.
	* Fixed data model class not to load up columns from the 1 to many relationship table when doing sharing security.
	* Fix include/include_once for bug when emitting events.
	* If time stamp is 0, don't render a date in the MVC Date Column Renderer.
	* Fixed bug in xhr parameter checking for ajax-y requests.
	* Fixed throwError so that it doesn't count every error type as critical failures.
	* Fix to data item delete method to work with finder results instead of just single items.
	* Fixed handling of zero values in form radio buttons.
	* Fixed Cgn_DataItem::getUnlimitedCount to work with strange group by clauses.
	* Fixed problem with ZF Search Lucene when an error stopped the index from opening.
	* Changed preEvent and postEvent to eventBefore and eventAfter to avoid collisions with real event names.
	* Fixed altering of user groups when you are the logged in user.
	* Fixed problem with template name on failed logins.
	* Added support for making link_text with old preg libraries.


Config Changes:

	* Replace dashes in module class names with nothing, dashes are illegal in classnames
	* Adding local-modules folder by default that ignores all custom chagnes in it.
	* Fixing sample syntax for default signal file.
	* Added a way to turn off SSL links for developing or servers w/o SSL.
	* Added support for non-standard SSL port numbers.
	* Changed preEvent and postEvent to eventBefore and eventAfter to avoid collisions with real event names.


Database Changes:

	* Adding db upgrade scripts for api agents.



Release 15
================================================================================
Release Notes:

Release 15 of Cognifty framework focuses on implementing new features of
the CMS as well as an overall bug fix release for 14.

The core Cgn_SystemRequest class has been refactored to better support
multiple SAPI requests such as CLI, HTTP, and CGI.  This makes it much
easier to run services from cron.

An area for developing your own local modules has been formalized and
introduced into the configuration settings.  This folder is
cognifty/local-modules.

Major work has been done to speed up the Cgn_ObjectStore global registry. 
It now supports lazy loading via the spl_register_autoload function.  If
you have defined a special event listener, or ticket handler, this object
will only be loaded on-demand by the object store.

The "userform" feedback mechanism has a change which is an attempt to
limit auto comment spam bots in the most unobtrusive way possible.  The
name of the comment field is a fixed length of random characters.  A spam
bot has not yet been able to correctly get spam by this feature and, since
the comment field is a textarea element, this has not caused any downsides
to human users with regular browsers.


Minor Changes:

	* Re-organized dashboard page to show more activity and content.
	* Return false and throw an error if there's no channel found.
	* Return the result of the signal all the way up the chain back to the calling service.
	* Use last module executed as bread crumb module.
	* Fix to YUI tree view to use the proper node index.
	* Small visual changes to site structure page.
	* Show user session messages grouped by their type.
	* Minor changes to main module's layout of articles.
	* Moved isAjax variable from object store to currentRequest.
	* Fix to data item delete method to work with finder results instead of just single items.
	* Fixed throwError so that it doesn't count every error type as critical failures.
	* Use include over include_once for speed.
	* If time stamp is 0, don't render a date in the MVC Date Column Renderer.
	* Changed default template behavior to pass along the service's templateName if it has been set.
	* Added simple echo Update debuggin function.  Return true or false from save() even when updating.


Bug Fixes:

	* Fixed problem where CGI mode gets caught in an fnf loop.
	* Fix for pdolite driver not checking for errors during an exec call.
	* Fixed a minor warning bug in the admin when including module libraries.
	* Fixed major bug which was impeding cached configs from functioning properly with references.
	* Fix to YUI tree view to use the proper node index.
	* Fix for vanity urls that have dots in them.
	* Fixed throwError so that it doesn't count every error type as critical failures.
	* Fixed bug in xhr parameter checking for ajax-y requests.
	* If time stamp is 0, don't render a date in the MVC Date Column Renderer.
	* Fix include/include_once for bug when emitting events.
	* Fixed problem where article pages can't be saved before an article is published.


New Features:

	* Adding special static library functions for finding overridden and customized module paths.
	* Adding cron php file to handle request from local CLI
	* Refactor large function into various *sapi* methods for initializing the currentRequest.
	* Search site structure for a URL match before showing a 404 on the fnf module.
	* Show user session messages grouped by their type.
	* Adding local-modules folder by default that ignores all custom chagnes in it.
	* Adding two MVC examples to cheatsheet.
	* Changed userform submits to look for random fieldnames to protect against spam bots.
	* Adding autoload function to help with lazy loading of ObjectStore items.
	* Use include over include_once for speed.
	* Changed default template behavior to pass along the service's templateName if it has been set.
	* Added method to get all group IDs of a user as an array.
	* Added support for sub where clauses in the data item.
	* Started adding Sharing Model techniques to data model class.
	* Added a form to edit groups for one user.


Config Changes:

	* Adding local-modules folder by default that ignores all custom chagnes in it.
	* Replace dashes in module class names with nothing, dashes are illegal in classnames


Release 0014
================================================================================

	* : Fixed spelling mistake of "excerpt".

	* : Show the article excerpt if one exists on the homepage.

	* : Made admin navigation more consistent by using better names for
	  pages.

	* : Handle bad admin login errors better.

	* : Keep a reference to the template vars so the main template can
	  alter them.

	* : Cleaned up admin pages. Made toolbar a standard part of admin
	  pages.

	* : Added more specific CGI handling for nanoweb in the
	  initRequestTickets function.

	* : Added flimsy support for rowCount into the pdo sqlite library.

	* : Added support for choosing database driver during installation.

	* : Altered installation SQL slightly for better transformation to
	  SQLite syntax.

	* : Adding custom and overridden module directory support to the
	  core library.

	* : Template doParseTemplateFile checks for module overrides.

	* : Minute speed-up to bootstrap file when configs are cached.

	* : Only set the published on date once. Keep updating the last
	  edit time on each publish though.

	* : Added "clearConfig" method to unset a previously defined config
	  value.

	* : Check for double includes of service files before including
	  them.

	* : Show error message when a user tries to register after logging
	  in.

	* : Added a browse section to article sections.

	* : Fixed breadcrumbs on browse section page.

	* : Changed bootstrap and Cgn_ObjectStore to use lazy loading
	  techniques.
	  Cached config settings are even faster now.

	* : Fixed issue with article section management.

	* : Changed templates on account module. Added breadcrumbs to every
	  page.

	* : Downgrade or upgrade jquery dialog to 1.5.1 so there are no ie7 dialog
	  issues.

	* : Adding search_cache directory to var so that the lucene search
	  manager
	  does not have to try to create it.

	* : Added default value for email.contactus config.

	* : Don't try to instantiate non existant object names in the
	  object store.

	* : Added class checks into some core libraries to compensate for
	  the lazy loading in the bootstrap process.

	* : Added next page link to the bottom of articles that have
	  multiple pages.



Release 0013
================================================================================

	* : Added userform to process and mail simple form submissions.

	* : Temporary fix to bad article section management.

	* : Added dummy class file for phpunit testing.

	* : added && (=='TRUE') statement to allow disregarding the
	  bootstrap.cache file

	* : changed the variable to trytocache instead of cached

	* : Spelling fix.

	* : Added phpdoc comments to data item constructor.

	* : spelling

	* : Added a filenotfound service to the main module.
	  Added config setting in default.ini to allow the definition of a
	  custom fnf handler.
	  Altered core SystemRunner to slipstream in the fnf module if the
	  requested module/service does not exist.

	* : Consume errors from the DB layer in the menu library if there
	  are no menus found.

	* : Spelling fix.

	* : Quiet errors if no database connection is found.

	* : Fix unit tests so they don't hardcode the installation files.

	* : Changed setArray of object store to conform with new behavior
	  of getArray.

	* : Close SQL directory handle after reading the file count during
	  installation.

	* : Align social bookmark icons to the left.

	* : Count posts when loading content from a parent blog.

	* : Added php syntax highlighter css that follows GeSHi formats.

	* : Removed special ml call from dokuwiki library, not needed for
	  CGN integration.

	* : Added README file to blog module.

	* : Added getDisplayName method to user to give common access to
	  usernames or first and lastnames as a way to display the user's
	  name

	* : Adding session messages to the default refresh template.

	* : Sort blog comments in the admin panel in the order in which
	  they were posted.

	* : Removed garbage commits from changelog.

	* : Don't allow for blank comments.

	* : Added first draft of live cheat sheet.

	* : Added basic name and web site support to blog comment system.

	* : Fixed permalink bug in blog when title had numbers in it.

	* : Added title changes to the cheatsheet page.

	* : Fixed page titles on tutorial pages.

	* : Adding more info to the cheatsheet.

	* : Changed textarea into div to allow for colored text.

	* : Moved wiki parsing method up into the highest
	  Cgn_PublishedContent class.

	* : Set mime to wiki if the editing page signals the wiki mimetype
	  when saving blog posts.

	* : Fixed parameter passing error for layout blocks.

	* : Swallow include errors in the 404 service.

	* : Make message box CSS more explicit so it doesn't get corrupted
	  by other themes.

	* : Fixed bug that stopped template sections from parsing when
	  callbacks were registered on other sections.

	* : Cleaned up template callback functions.

	* : Added bare template.

	* : Added integration tests to the phpunit.

	* : Added a few more tests to the data item.

	* : Added simple scripts to help with phpunit commands.

	* : Added Cgn_Data_Model class.

	* : Updated unit tests, trying to rid phpunit files as source of
	  code coverage.

	* : Adding site search module, admin module, and data model
	  libraries.

	* : fix drop table commands for some install tables.

	* : Added search box to default refresh template.

	* : Added menu link to admin search module under 'site' menu.

	* : Added better error message to installer when a DB cannot be
	  chosen by the installer.

	* : Added better message to search results when no result found.

	* : Update phpunit tests for data model class changes.

	* : Fixed a bug which caused the last published version number of
	  an article not to show.

	* : Added articles to the backend search and the front end results.

	* : Added home link to refresh template.

	* : Added PDO SQLite wrapper.


Release 0012
================================================================================
	* : Added 'org_name' to account profiles.

	* : Admin table view now uses col renderers too.

	* : Don't show any HTML if there are no buttons in the toolbar.

	* : Show the module's README file in the module details page if it
	  exists.

	* : Adding social bookmarks to the blog module.

	* : Adding next and previous links to main blog page.

	* : Added support for using excerpts in blog posts.

	* : Remove debug code.

	* : Save excerpt for both content and blog posts.

	* : Order posts in admin by created_on date.

	* : Comment out the PHP4-style singleton class.

	* : Adding some mysql specific tests.

	* : Move library (mysql) tests to the end of the test suite.

	* : Adding data item test.

	* : Reset database driver id to zero (0) after closing the
	  connection.

	* : Added "begin" method to undo the effects of "commit" method
	  after a save.

	* : Small tweaks to blog comments spam settings.

	* : If a user is not accepting cookies, consider them to be
	  flooding for the purposes of throttling trust plugin.

	* : Added better breadcrumb trails to blog admin.
	  Finished multi-blog functionality for admin.

	* : Added colorset to fieldsets and ledgends to the admin.

	* : Show seconds passed for each of the recent activity entries on
	  the admin dashboard.

	* : Adding blog excerpt field to upgrade scripts

	* : Adding tests for articles and article pages.

	* : Don't overwrite the default values of touch/lastTouch if
	  the session doesn't have set values for them.

	* : Name change to plugin classes for consistent style.

	* : Add password forgot link to streamlined login page.

	* : redirect to the parent blog after publishing a blog entry.

	* : show all comments for one particular blog entry with
	  approve/disapprove links.

	* : Fixed delete comment redirect links to work with both global
	  and post-centric comment deletes.

	* : Added test for web page sectioned content.

	* : Changed storeObject to be aware of optional path in the storage
	  key.
	  Added a Cgn_ObjectStore test to phpunit test suite.

	* : Refactor showRecentPosts method in blog utils.

	* : Refactored complicated mainEvent method of front-end blog.
	  Style improvements to the blog admin.

	* : Added styleshout's ReFresh 1.0 as the default template.

	* : Changed vanity URL parsing to work with newer ObjectStore
	  behavior of "hasConfig".

	* : Added org_name to account addresses.

	* : Added rss module to show recent blog posts as RSS 2.0

	* : Fixed page numbering bug which caused page 1 to appear twice in
	  the blog.

	* : Added permalink parsing to the blog entry page.

	* : Fixed problem with saving excerpt field for blogs and pages.

	* : Fixed some URL problems in the admin blog screens.

	* : Enhanced breadcrumbs for blog admin screens.

	* : Fixed some mime type issues with toolbar buttons for creating
	  new blog posts.

	* : Added debug echoInsert method to data items.

	* : Changed loadLibrary to use include_once over include in core
	  Cgn class.

	* : Added ability to have local.ini on a per module basis for local
	  config settings.

	* : Added replacement for global "includeobject" function to the
	  Cgn_ObjectStore class.

	* : Changed slog/signal configuration syntax to support multiple
	  slots per signal.

	* : Commented out default test signal from core signal.ini config
	  file.

	* : Proper detection of blog posts in the content viewer toolbar.

	* : Fixed a potential problem when freeing MySQL result sets out of
	  order.

	* : Adding PDO-mysql database driver.

	* : Added lastInsertId functionality to pdo-mysql driver.

	* : protect where clause with addslashes

	* : Remove manual addslashes from user land code.

	* : Made significant speedups to the bootstrap process.

	* : Minor speedups to the most commonly used functions.

	* : Use dynamic area number 1 if no default dynamic area can be
	  loaded.

	* : Added table coloring CSS to refresh01 template.

	* : Added loading gif for suckerfish to admin template to stop bad
	  404s

	* : Altered redirectHome and getHomeUrl methods to take an extra
	  array of parameters to pass along.

	* : Added the eventName to the list of init() parameters for a
	  service.

	* : Fixed unpublish/delete links for blog posts.

	* : Cleanup refresh template HTML.

	* : Added 4th init parameter to trusted services.

	* : Changed refresh css definitions to match blog module.

	* : Added an article's title to the html page title.

	* : Altered blog module to set the site tag line and display the blog description.

	* : Added tagline and description saving to blogs.

	* : Added template function to set the global site tag line.

	* : Small spacing tweak to refresh template.

	* : Added new object store test.

	* : Completed upgrade scripts from release 11 to 12.


Release 0011
================================================================================
	* : Add an explanation on the welcome page about no home page
	  configured in the admin.

	* : Added more user tests.
	  Cleaned up user registration functions.
	  Change Data Item library to only use IS NULL comparisons when the
	  item has the column in the _nuls array.

	* : Added user test to PHPUnit.

	* : Removed explanation of trust failure when trusted service fails

	* : Fixed issue with vanity URLs not parsing properly.

	* : Cleanup unneeded ini file settings.

	* : add version number and revision to the core ini file.

	* : attempt to fix problem with caching a request that does not use
	  the object store.

	* : Remove debugging code.

	* : Testing svn keywords

	* : Fixe some examples in the sample htaccess and robots.txt files.

	* : Added external tools to insert global svn revision numbers into
	  the core.ini

	* : Added getReleaseNumber and getBuildNumber methods to
	  Cgn_SystemRunner class.
	  Fixed parsing of ObjectStore values so that the last "path" is
	  optional.

	* : Turn off ob_start by default.
	  Look for boot directory at level with index by default.

	* : Change session method name from unSet to clear, to avoid
	  confusion.

	* : Added $dieOnFailure flag to trusted services so that they may
	  choose to
	  continue processing after a trust failure.

	* : Adding email specific MXQ Message class.

	* : Upgrading jquery to 1.2.5, adding some jquery UI libraries for
	  dialogs.

	* : adding Zend Lucene search.

	* : Fixing log polluting error on redirects.

	* : Added "exec" method to simply run a statement and not handle
	  return values
	  as result sets.

	* : Adding popup icons to the default icon set.

	* : Fixed problem with missing ini setting.

	* : Cleanup bootstrap caching to deal with include file
	  dependencies.

	* : Ignore failed drop table statements during installation, user
	  may not have privileges.

	* : Fixed error in signal manager which wouldn't allow for proper
	  serialization.

	* : Cleaned up account sql tables.
	  Added in missing tables for user password.
	  Added back tables for content tagging.

	* : Stop an error when emitting a signal when there are no
	  configured listeners at all.

	* : Replace new PATH constant into all correct object store
	  settings for admin panel.

	* : Optimize out quotes in the SQL builder for ints and floats.
	  Overusing quotes bloats mysql's analysis of the statement.

	* : optimize data type analysis for data item where clause
	  building.

	* : adding icon set as SVG to project.

	* : Added some content to the main admin page as a dashboard-style
	  overview.

	* : Added warning to admin dashboard if logging is not configured.

	* : Strip repetative "tail" from URL when logging
	  (the part in between the domain and the MSE (~/user/dev/))

	* : Removed old method calls from table analyzing methods in the
	  Mysql class.

	* : Added "Home" link to admin menu.

	* : Added feature to show headers of MVC table views even if there
	  is no data in the model.

	* : Altering title of control panel to better reflect the site
	  name.

	* : bug fix, url parameters.

	* : link to new content from the dashboard page.

	* : Fixed issues with slashes in the log table.

	* : Altered look of latest content block on admin dashboard.

	* : schema bump

	* : fixed installation files for bad column name.

	* : fixed installation files for bad column name.

	* : Fixed Yui MVC tree view to properly handle nexted children.
	  Adjusted recursive saftey catch to 100 levels deep.

	* : Site structure page handles YUI tree browser now.

	* : Added bread crumb library call to default template.

	* : Change the version number in the local core.ini fiel as well.

	* : Remove bad grammar comma in default template.

	* : Altered the site name on the login page to match the index page
	  of admin screens.

	* : Added YUI libraries for tree view.

	* : Added delete functionality to site structure page.

	* : Pull the proper "link_text" attribute for bread crumb tails,
	  don't use the "title".

	* : Treat the string "NULL" as NULL in the data item where builder.

	* : Force blog posts to sort descending

	* : Added account settings link to top menu of default template.

	* : Adjusted default font size for admin panel.


Release 0010
================================================================================
	* : Quiet an error when saving articles.

	* : adding visitor log table.

	* : Fix some of the rewrite conditions and rules so as to work even
	  without a favicon

	* : fix favicon location in metro01 template.

	* : Added "www." prefix remover code to the sample htaccess file.

	* : load real groups from the database upon login.

	* : Moving icons directory away from Apache's default Alias.

	* : patching functions that automatically embed links in content

	* : Fixing icon status to deal with broken published_on records
	  better.

	* : make a thumbnail event that instructs the image event to output
	  the thumbnail size.

	* : fixing downloadable files bug that didn't deal with bit/byte
	  math properly and didn't work with output buffering properly.

	* : Upgrading jquery to fix IE focus bug.

	* : fix stream reading function to work with newest PHP versions.

	* : Adding the wider/thinner buttons to all three tabs in the
	  wikilayout file. I want to be able to adjust the preview screen
	  for all functions

	* : set the page title to the web page's title.

	* : fixed images to show published status, moved delete link in
	  front of preview. The images are not uniform enough on large
	  content sites to keep the del links as the last column.

	* : redirect to the account module if no redirect was given

	* : adding personal info page and change password page into the
	  account page.

	* : Adding signal slot manager

	* : make test slot show more info

	* : fix some indexes for base install.

	* : change user_id to cgn_user_id

	* : Clean up all template variables after output is done.

	* : introduce the concept of column renderers to the mvc table.

	* : Removing duplicate code.

	* : fixing recursion bug in yahoo tree widget

	* : store hashed password in session for integration with other CMS.

	* : fixing build limit clause function in data item.

	* : make cleanup tickets function for lib cgn core.

	* : get rid of PHP4 compatible singleton class.

	* : adding basic bread crumb support to template and services.

	* : Adding structured bread crumb support via site structure.

	* : Make users sub-class admin service.

	* : fix bug that wouldn't allow admin requests to show bread
	  crumbs.

	* : adding column width and column text align to mvc table

	* : fix breadcrumbs to use current page content id.

	* : Fix attribute form for setting 'is_portal' attribute.

	* : Adding a simple 404 page to template system.

	* : Change CSS classes for table grids on the front end.

	* : Adding date column renderer.

	* : Clean up the blog entry page, close the gap between the title
	  and the text body.

	* : link the title of the article to the article view.

	* : split up the loading of articles and the showing of the home
	  page into separate functions.

	* : simple utility method to get the 5 latest blog posts.

	* : adding cgn_homelink method.

	* : making bread crumbs work for blog entries.

	* : use the blog entry title for the title tag.

	* : changed variable page_content to content. fix bug in home page
	  display.

	* : Make files in wiki mode download from the asset module.

	* : fix blob streaming error

	* : Fix blob streaming to work with firefox and double gzip
	  problem.

	* : Stuff the required CSS and javascript for the massive content
	  editor into the library.

	* : adding clearAll to simple session class

	* : Fix for change in global behavior for some random php5 version.

	* : dump include_once for include for dealing with core files.

	* : only use email as username if no username exists.

	* : return boolean from register user, not a pkey.

	* : Return false if no mysql extension exists.

	* : add external account reference id and number.

	* : adding account address

	* : adding ref id and ref no. to accounts

	* : Adding extra contact email for accounts.

	* : adding fax and phone to address table.

	* : adding firstname and lastname to address

	* : fix birthDate and account firstname/lastname mixup

	* : shortcut for performance in the bootstrap file

	* : adding local directory to override ini files.

	* : fixing bootstrap cache feature, stop reference clobbering.

	* : speed up boostrap cache a bit.

	* : ignore ini files in this directory.

	* : remove from global namespace

	* : adding phpunit.

	* : adding password recovery script to login module.

	* : clean up tickets after attempting to use them. if login fails,
	  user must get another ticket.

	* : Altering ticket running methods to allow for a stack of
	  tickets.
	  You can alter tickets at any time during the request flow.

	* : only set a redir if one is not already set for login as a
	  stacked ticket.

	* : Only cahce unique includes.

	* : Fixing a lot of initialization routines so that the system
	  works
	  flawlessly with caching on or not.

	* : Don't duplicate content previews.

	* : fix for breadcrumbs on pages.

	* : Keep track of completed tickets. Don't show breadcrumbs on 404
	  pages.

	* : adding echoDelete method to see delete sytanx for a data item.

	* : adding how to make a module wiki page to tutorial.

	* : hack for getting CSS on wiki tutorial pages.

	* : adding geshi code highlighting to doku wiki.

	* : fix registration redirect

	* : force include once until class_exists check

	* : return false if no results were received in the load command.
	  leave object as new

	* : adding fetchAll method to base DB class.

	* : default table renderer now uses align value. added money
	  renderer.

	* : adding active formatter tests

	* : adding more parameters to the service init.

	* : fixing session test to match new requirement to call start
	  manually.

	* : Adding the type back into the constructor.

	* : Fixes to session re-authorization timing.

	* : check the session id method.

	* : Adding vergabe to the sandbox module to explain its purpose.

	* : adding a few more instructions to the show-off module pages, so
	  it doesn't look broken.

	* : add message displays on *this* template output, instead of the
	  next one.

	* : add getUnlimitedCount method to get the count of rows without
	  using a limit.

	* : make signal manager's ''emit'' method static.

	* : quiet primary key errors in data item.

	* : don't need to free result after full nextRecord

	* : don't require a locale for MVC money renderer.

	* : critical fix for admin sessions in the new 'runTickets' style

	* : Don't automatically create a document when cliking 'new
	  document link'.
	  Change link text to 'URL text'.
	  Supply a new title if editing a new page.

	* : Add two types of image links, web size and thumbnail sized with
	  lightbox support.

	* : align the links to embed an image in the admin panel.

	* : make lightbox thumbnails work for HTML pages as well as wikis

	* : finish ability to edit images and downloadable files.

	* : Remove testing function from admin login.

	* : adding logout link to admin screen.

	* : logout event for admin panel.

	* : adding ability to choose what style of preview for blogs.

	* : use blog attributes to determine what type of entry preview to
	  show.

	* : Adding entries per page attribute to blogs.

	* : Adding label wrappers for radio buttons.

	* : adding blog attribute table.

	* : Adding var directory for storing runtime cache, etc...

	* : Ignore boostrap.cache in svn repo

	* : change the installation to work with the boot/local directory.

	* : Remove test javascript tree from default template.

	* : Disallow browsing of key folders.

	* : Save the item to the service file after the automatic admin
	  save event.

	* : Updating license information to include Zend Framework.

	* : Add event ''login_success_after'' for good logins.

	* : Raise the maximum number of characters shown as the article preview
	from 300 to 1000.


Release 0009
================================================================================
	* : fix tests to work with new dir layout.

	* : Fix for wrong percentage math in the DB blob streamer.

	* : fix delete bug that didn't pass the ID correctly to the data
	  item

	* : Don't use rewrite urls by default.

	* : fixing image delete functions.

	* : allow for image previews

	* : store the link_text with a newly uploaded image.

	* : fix rank issues for menu items.

	* : Added code to identify which Menu you are editing

	* : adding http library

	* : adding a way to have config values for modules.

	* : fix some consistency problems with restoring images, web pages.
	  show thumbnails of images all the time.

	* : fix bug where a non-existant db handle would die.

	* : Pre and Post events for each service.

	* : adding some default redirect for front-end modules that require
	  a login

	* : adding in special checks for Ajax requests, don't redirect them
	  to login if ajax calls fail.

	* : Return a real Cgn_User object from the load call.

	* : adding attention icons.

	* : adding caution icons

	* : added a function for articles to unpublish

	* : adding new logic and icons to pages panel

	* : adding new logic and icons to assets panel

	* : adding new logic and icons to images panel

	* : adding new logic and icons to articles panel

	* : making a convenience funtion when adding a new upload file.

	* : turn on getSessionId method.

	* : adding visitor log handler.

	* : stop warnings when there are no expanding menus.
